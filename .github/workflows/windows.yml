name: Windows

on: [push, pull_request]

jobs:
  vs2019:
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]

    runs-on: windows-latest

    env:
      TAOPQ_TEST_DATABASE: host=localhost dbname=mydatabase user=myuser password=mypassword

    steps:
    - uses: actions/checkout@v2

    - run: |
        $pgService = Get-Service -Name postgresql*
        Set-Service -InputObject $pgService -Status running -StartupType automatic
        Start-Process -FilePath "$env:PGBIN\pg_isready" -Wait -PassThru

    - run: |
        & $env:PGBIN\psql --command="CREATE USER myuser PASSWORD 'mypassword'" --command="\du"

    - run: |
        & $env:PGBIN\createdb --owner=myuser mydatabase
        $env:PGPASSWORD = 'mypassword'
        & $env:PGBIN\psql --username=myuser --host=localhost --list mydatabase

    - run: cmake -E make_directory build

    - shell: bash
      working-directory: build/
      run: cmake $GITHUB_WORKSPACE -G "Visual Studio 16 2019"

    - working-directory: build/
      run: cmake --build . --config ${{ matrix.build_type }}

    - working-directory: build/
      run: ctest -C ${{ matrix.build_type }} --output-on-failure

  vs2019-clang:
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - run: cmake -E make_directory build

    - shell: bash
      working-directory: build/
      run: cmake $GITHUB_WORKSPACE -G "Visual Studio 16 2019" -T ClangCL

    - working-directory: build/
      run: cmake --build . --config ${{ matrix.build_type }}

#    - working-directory: build/
#      run: ctest -C ${{ matrix.build_type }} --output-on-failure

  vs2017:
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]

    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v2

    - run: cmake -E make_directory build

    - shell: bash
      working-directory: build/
      run: cmake $GITHUB_WORKSPACE -G "Visual Studio 15 2017 Win64"

    - working-directory: build/
      run: cmake --build . --config ${{ matrix.build_type }}

#    - working-directory: build/
#      run: ctest -C ${{ matrix.build_type }} --output-on-failure

